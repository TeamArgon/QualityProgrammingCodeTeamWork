renamed Game to GameEngine
added IRenderer interface
created ConsoleRenderer, which implements the IRenderer interface
moved InitializeGameBoard() functionality in constructor
moved InitializeTopPlayers() functionality in constructor
created method GenerateNewBoard() for creating a new board
renamed Menu() to StartGame() for clarity
renamed CheckHighScores() to IsHighScore() for clarity
changed project to .NET framework 4.5
optimized IsHighScore() method to use Linq for faster checking of top scores
changed all occurences of Console.WriteLine() with gameRenderer.Draw()
made StartGame() public as it should be exposed to the public so that a new game can be started
updated DisplayTopScores() to use string.Format()
changed else - if chain to switch statement
renamed string "str" to "command" for clarity
updated caught Exception to IndexOutOfRangeException, which is more specific
extracted method AddToTopScores, which adds a score to the top scores if it qualifies
created an interface IGameController which gets the user input
created a class ConsoleGameController which gets the user input via the console
organized classes by folders - moved game input methods and interface in the Input Methods; the Board, Field and Player classes to GameElements folder; the game renderer and interface in the Renderer folder
created new class MinesweeperGame
moved the entry point of the program from the GameEngine class to the MinesweeperGame class
extracted duplicating code in method called EndGame
added check if the player entered a blank name
added unit tests for the console input method
added documentation for most methods

TODOs: 
- further refactor the StartGame() method
- comments + documentation
- unit tests
- add assertions
- user input must be on the same line as the message "Enter row and column"